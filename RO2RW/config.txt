#####################
# Choose the size to expand the partitions 'System=S' 'Product=P' 'System_ext=SE' 'Vendor=V' 'Other sections if any = OT'
# If RW_SIZE_MOD="40" then Then each partition will be increased by 40 MB
# IF RW_SIZE_MOD="MAX" then it will be divided according to the percentage of free space
# Parameter for expanding partitions, if you want to expand partitions to the maximum of available space then use MAX, if for a fixed size then FIXED. 
# If you don't want to expand partitions, you can use the MAX option with zero percentages, or FIXED with RW_SIZE=1
# EXAMPLE:┤  
#         ├─ RW_SIZE="S=20% V=20% P=20% SE=20% OT=20%"
#         ├─ RW_SIZE_MOD="MAX"
# EXAMPLE:┤  
#         ├─ RW_SIZE="100"
#         ├─ RW_SIZE_MOD="FIXED"


    RW_SIZE="1"
    RW_SIZE_MOD="FIXED"

#####################
# If for some reason the script cannot recognize the volume key, then there will be an error and exit the program. 
# If you enable REMOVE_TIMEOUT_KEY, then the script, in the absence of button clicks, will be active forever until TWRP is restarted
# EXAMPLE:┤ 
#         ├─ REMOVE_TIMEOUT_KEY="false"
#         ├─ REMOVE_TIMEOUT_KEY="true"

    REMOVE_TIMEOUT_KEY="true"

#####################
# Forcibly runs the script with the set values, if at least one value is empty, then the script will fall into error. 
# Dialog boxes will also not be active, and it will not be possible to delete any files if it is required for the super line-up.
# !!! This will only work for TWPR !!!
# EXAMPLE:┤ 
#         ├─ FORCE_START="false"
#         ├─ FORCE_START="true"
           
    FORCE_START="true"

# If at least one value is wrong, start manual input while running, IF_VALUE_WRONG="true" same as FORCE_START="false"
# EXAMPLE:┤
#         ├─ IF_VALUE_WRONG="false"
#         ├─ IF_VALUE_WRONG="true"

    IF_VALUE_WRONG="false"

#####################
# The following values will only be applicable if FORCE_START=true
#
# The value is responsible for which script will be run 
# EXAMPLE:┤
#         ├─ WHAT_DO_SCRIPT="literw"
#         ├─ WHAT_DO_SCRIPT="fullrw"
#         ├─ WHAT_DO_SCRIPT="checkrw"

    WHAT_DO_SCRIPT="fullrw"

# If you don't know what DFE is, then leave the value to false, otherwise you should know what to do
# EXAMPLE:┤ 
#         ├─ DFE_PATCH="false"
#         ├─ DFE_PATCH="true"

    DFE_PATCH="true"

# The variable is responsible for creating a backup of the original super and vbmeta
# EXAMPLE:┤  
#         ├─ BACKUP_ORIGINAL_SUPER="true:row"
#         ├─ BACKUP_ORIGINAL_SUPER="true:sparse"
#         ├─ BACKUP_ORIGINAL_SUPER="true:recovery"
#         ├─ BACKUP_ORIGINAL_SUPER="true:fastboot"
#         ├─ BACKUP_ORIGINAL_SUPER="false"

    BACKUP_ORIGINAL_SUPER="false"

# If there are problems with mounting EXT4, then mounting will be skipped 
# for this image, thereby DFE will not be available if it is a vendor and other patches
# EXAMPLE:┤
#         ├─ IF_EXT4_MOUNT_PROBLEM_CONTINUE="false"
#         ├─ IF_EXT4_MOUNT_PROBLEM_CONTINUE="true"

    IF_EXT4_MOUNT_PROBLEM_CONTINUE="false"

# If the internal storage is unavailable, forcibly try to use the external storage, or the current 
# one from where the script was launched
# EXAMPLE:┤
#         ├─ IF_NO_DATA_CONTINUE="false"
#         ├─ IF_NO_DATA_CONTINUE="true"

    IF_NO_DATA_CONTINUE="false"
    


